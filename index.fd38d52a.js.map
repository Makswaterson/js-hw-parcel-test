{"mappings":"YA6PA,IAEaA,EAFPC,EAAS,CAAC,SAAe,QAAQ,GAAG,GAAG,GAAG,IAK1CC,QAAQC,KAHDH,EAAS,IAAII,KAGG,cAHSC,WACxBJ,EAAOD,KAGfM,G","sources":["src/localstorage16/script.js"],"sourcesContent":["// const contentRef = document.querySelector('.content');\n// const containerRef = document.querySelector('.container');\n// console.log(containerRef);\n// console.log(contentRef);\n// const KEY_X = 'keyX';\n// const KEY_O = 'keyO';\n// const CURRENT_PLAYER = 'player';\n// let player = localStorage.getItem(CURRENT_PLAYER) || 'X';\n// let stepX = JSON.parse(localStorage.getItem(KEY_X)) || [];\n// let stepO = JSON.parse(localStorage.getItem(KEY_O)) ?? [];\n// const win = [\n//   [1, 2, 3],\n//   [4, 5, 6],\n//   [7, 8, 9],\n//   [1, 4, 7],\n//   [2, 5, 8],\n//   [3, 6, 9],\n//   [1, 5, 9],\n//   [3, 5, 7],\n// ];\n// let markup = '';\n\n// for (let i = 1; i <= 9; i += 1) {\n//   markup += `<div class=\"item\" data-id=\"${i}\"></div>`;\n// }\n\n// contentRef.insertAdjacentHTML('beforeend', markup);\n// contentRef.addEventListener('click', onClick);\n\n// function onClick(evt) {\n//   // '' => !false => true\n//   if (!evt.target.textContent) {\n//     const id = Number(evt.target.dataset.id);\n//     evt.target.textContent = player;\n//     if (player === 'X') {\n//       stepX.push(id);\n//       localStorage.setItem(KEY_X, JSON.stringify(stepX));\n//       const isWinner = checkWinner(stepX);\n//       if (isWinner) {\n//         console.log(`${player} is Winner üòé`);\n//         setTimeout(() => {\n//           reset();\n//         }, 500);\n//         return;\n//       }\n//     } else {\n//       stepO.push(id);\n//       localStorage.setItem(KEY_O, JSON.stringify(stepO));\n//       const isWinner = checkWinner(stepO);\n//       evt.target.textContent = player;\n//       if (isWinner) {\n//         console.log(`${player} is Winner üòé`);\n//         setTimeout(() => {\n//           reset();\n//         }, 500);\n//         return;\n//       }\n//     }\n\n//     player = player === 'X' ? 'O' : 'X';\n//     localStorage.setItem(CURRENT_PLAYER, player);\n//   }\n// }\n\n// function checkWinner(arr) {\n//   const result = win.some(values => values.every(value => arr.includes(value)));\n//   return result;\n// }\n\n// function reset() {\n//   content.innerHTML = markup;\n//   localStorage.clear();\n//   player = 'X';\n//   stepX = [];\n//   stepO = [];\n// }\n\n// (function () {\n//   try {\n//     [...content.children].forEach(item => {\n//       const id = Number(item.dataset.id);\n//       if (stepX.includes(id)) {\n//         item.textContent = 'X';\n//       } else if (stepO.includes(id)) {\n//         item.textContent = 'O';\n//       }\n//     });\n//   } catch (e) {\n//     console.log('localStorage empty');\n//   }\n// })();\n\n/**\n * –ó–ê–í–î–ê–ù–ù–Ø 1\n * –ü–µ—Ä–µ—Ä–æ–±–∏ —Ñ—É–Ω–∫—Ü—ñ—é –Ω–∞ –ø—Ä–æ–º—ñ—Å —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –ø—Ä–æ–º—ñ—Å –ø–æ–≤–µ—Ä—Ç–∞–≤ –∑–Ω–∞—á–µ–Ω–Ω—è\n * —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏ –ø—ñ—Å–ª—è –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó\n */\n\n// function greet() {\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       resolve('hello world');\n//     }, 2000);\n//   });\n//   return promise;\n// }\n// greet().then(responce => console.log(responce));\n\n// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é printNumbers(from, to), —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å —á–∏—Å–ª–æ –∫–æ–∂–Ω—É —Å–µ–∫—É–Ω–¥—É, –ø–æ—á–∏–Ω–∞—é—á–∏ –∑\n//from —ñ –∑–∞–∫—ñ–Ω—á—É—é—á–∏ to.\n// –ó—Ä–æ–±—ñ—Ç—å –¥–≤–∞ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤–∏—Ä—ñ—à–µ–Ω–Ω—è.\n\n// function printNumbers(from, to) {\n//   for (let i = from; i <= to; i++) {\n//     makePromise(i).then(response => console.log(response));\n//   }\n// }\n// printNumbers(10, 20);\n\n// function makePromise(sec) {\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       resolve(sec);\n//     }, sec * 1000);\n//   });\n//   return promise;\n// }\n\n/**\n * –ó–ê–í–î–ê–ù–ù–Ø 2\n * - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π prompt —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞–π –∑–Ω–∞—á–µ–Ω–Ω—è –∑–≤—ñ–¥—Ç–∏.\n * - –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –±—É–¥–µ –Ω–∞–±—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ prompt —ñ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —è–∫–æ—ó –±—É–¥–µ –ø—Ä–æ–º—ñ—Å.\n * –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ —î —á–∏—Å–ª–æ–º, –≤—ñ–¥—Ö–∏–ª—è–π –ø—Ä–æ–º—ñ—Å —Ç–∞ –ª–æ–≥—ñ—Ä—É–π \"error\".\n * –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–Ω–µ, –≤–∏—Ä—ñ—à—É–π –ø—Ä–æ–º—ñ—Å —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞–π \"even\" —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É.\n * –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–µ –ø–∞—Ä–Ω–µ, –≤–∏—Ä—ñ—à—É–π –ø—Ä–æ–º—ñ—Å —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞–π \"odd\" —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏.\n */\n\n// const userData = function (peyLoad) {\n//    if(isNaN(peyLoad)){\n//      return Promise.reject('error')\n//    }\n//   const result = peyLoad%2 === 0\n//   const promise = new Promise((resolve,reject) => {\n//     setTimeout(()=> {\n// resolve(result ? 'even' : 'odd')\n//     },result ? 1000 : 2000)\n   \n//   })\n//   return promise\n// }\n// const number = +prompt('What number you want?')\n// userData(number)\n// .then((responce)=>{\n//   console.log(responce);\n// })\n// .catch((error)=>{\n//   console.log(error)\n// })\n\n\n/**\n * –ó–ê–í–î–ê–ù–ù–Ø 5\n * –ü–µ—Ä–µ—Ä–æ–±–∏ –∫–æ–¥ —Ç–∞–∫, —â–æ–± —É—Å—ñ –¥–∞–Ω—ñ –∑–±–∏—Ä–∞–ª–∏—Å—è\n * –û–¥–Ω–æ—á–∞—Å–Ω–æ —ñ –ø—Ä–∏—Ö–æ–¥–∏–ª–∏ —É –≤–∏–≥–ª—è–¥—ñ –º–∞—Å–∏–≤—É\n */\n\n// const getData = () =>\n//     new Promise((res) => {\n//         setTimeout(() => {\n//             const data = 1;\n//             console.log(data);\n//             res(data);\n//         }, 1000);\n//     });\n\n// const getNewData = () =>\n//     new Promise((res) => {\n//         setTimeout(() => {\n//             const data = 2;\n//             console.log(data);\n//             res(data);\n//         }, 1000);\n//     });\n\n// const getAnotherData = () =>\n//     new Promise((res) => {\n//         setTimeout(() => {\n//             const data = 3;\n//             console.log(data);\n//             res(data);\n//         }, 1000);\n//     });\n\n// const getLastData = () =>\n//     new Promise((res) => {\n//         setTimeout(() => {\n//             const data = 4;\n//             console.log(data);\n//             res(data);\n//         }, 1000);\n//     });\n\n//     Promise.all([getData(), getNewData(),getAnotherData(),getLastData()])\n//     .then((responce)=>{\n//   console.log(responce);\n// })\n// .catch((error)=>{\n//   console.log(error)\n// })\n\n\n/**\n * –ó–ê–í–î–ê–ù–ù–Ø 7\n * –§—É–Ω–∫—Ü—ñ—è countWithDelay –ø—Ä–∏–π–º–∞—î 3 –∞—Ä–≥—É–º–µ–Ω—Ç–∏:\n * 1) –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Ç–∏–º —è–∫ —Å–ø—Ä–∞—Ü—é—î —Ñ-—Ü—ñ—è logCount\n * 2) —Å–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –≤—ñ–¥–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ logCount\n * 3) –∑–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –≤–∏–∫–ª–∏–∫–∞–º–∏ —Ñ-—Ü—ñ—ó\n *\n * logCount –ø–æ–≤–∏–Ω–Ω–∞ –ª–æ–≥—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∏–∫–ª–∏–∫—ñ–≤\n */\n\n// const countWithDelay = (delay = 0, steps = 0, stepInterval = 0) => {\n//   for (let index = 0; index < steps ; index++) {\n//     logCount(index,delay)\n//     .then((responce)=>{\n\n//   console.log(responce);\n// })\n//  delay +=stepInterval\n// }\n// };\n\n//  countWithDelay(3000, 6, 1000);\n\n// function logCount(index,delay){\n//   return new Promise((resolve,reject)=> {\n//     setTimeout(()=> {\n//       resolve(index)\n//     },delay)\n//   })\n// }\n\n\n\n// –ù–∞–ø–∏—à—ñ—Ç—å JavaScript, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–Ω—ñ–≤ –Ω–∞ –º—ñ—Å—è—Ü—å.\n// –ü—Ä–∏–∫–ª–∞–¥ –≤–≤–µ–¥–µ–Ω–Ω—è:\n// console.log(getDaysInMonth(9, 2021));\n// –ø—Ä–∏–∫–ª–∞–¥:\n// 30\n// var getDaysInMonth = function (month, year) {\n//   return new Date(year,month,0).getDate()\n// }\n// console.log(getDaysInMonth(9, 2021));\nconst amount = ['—Å—ñ—á–µ–Ω—å','–ª—é—Ç–∏–π','','','','']\nfunction month_name(param){\n const index =  new Date(param).getMonth()\n return amount[index]\n}\nconsole.log(month_name('10/11/2021'));\nclg"],"names":["index","$e5f2abce1c9c3f10$var$amount","console","log","Date","getMonth","clg"],"version":3,"file":"index.fd38d52a.js.map"}